---
title: "Data Wrangling Refresher"
format: html
editor: visual
---

```{r}
library(tidyverse)
library(palmerpenguins)
```

## Data wrangling refresher

1.  Starting from penguins, write a single piped sequence in which you:
    -   Only include penguins at Dream and Biscoe Islands
    -   Remove the year and sex variables
    -   Add a new column body_mass_kg with penguin mass converted from g to kg
    -   Rename the island variable to location

```{r}
# this is how you would write it long form. However! There's an easier way with the filter and %in% functions

# DB_penguins <- penguins %>% filter(island == "Dream"| island == "Biscoe")

# select (-year, -sex) means to delete these columns

# Double equals is a question whether something matches
# One equal is match exactly

# Mutate means to add a new column using existing columns.
# always check after each line, esp for formula conversions

penguins %>% 
  filter(island %in% c("Dream", "Biscoe")) %>% 
  select(-year, -sex) %>% 
  mutate(body_mass_kg = body_mass_g/1000) %>% 
  rename(location = island)
```

Starting from penguins, write a single piped sequence to:

-   limit to Adelie penguins

-   Remove any observations where flipper_length_mm is NA (!is.na()) or drop_na)

    -   Be careful using the drop_na function

    -   !is.na is asking whether it is true that NA is returned

        -   '!' means [do not include]{.underline}

-   Group the data by sex

    -   group_by does not change the dataframe. Just reorganizes it

-   Create a summary table that contains the mean, standard deviation and sample size of flipper lengths for male and female Adelie penguins

```{r}
adelie_summary <- penguins %>% 
  filter(species %in% "Adelie") %>% 
  drop_na(flipper_length_mm) %>% 
  group_by(sex) %>% 
  summarize(mean_flipper_length = mean(flipper_length_mm),
            sd_flipper_length = sd(flipper_length_mm),
            sample_size = n())

```

```{r}
penguins %>% 
  group_by(species, island, sex) %>% 
  summarize(sample_size = n())

# Count is just wrapping together group_by + summarize + n() to get counts of observations

penguins %>%  count (species, island, sex)
```

## Datapasta

Make sure to install packages in console, not in the quarto doc. Otherwise it would reinstall each time (install.packages("datapasta")

When you install a new package, you need to restart R. so make sure to save, pull, push

Restart R Studio. Now you have an "Addins" function up top!

WIth this package, you can copy/paste a table from web using the Addins dropdown

```{r}
animals <- data.frame(
  stringsAsFactors = FALSE,
          location = c("lagoon", "bluff", "creek", "oaks", "bluff"),
           species = c("bobcat", "coyote", "fox", "squirrel", "bobcat"),
          maturity = c("adult", "juvenile", "adult", "juvenile", "adult")
)
```

```{r}
sites <- data.frame(
  stringsAsFactors = FALSE, #this means just read in data as characters
          location = c("beach", "lagoon", "bluff", "oaks"),
    full_site_name = c("Goleta Beach","UCSB Lagoon",
                       "Ellwood Mesa","Fremont Campground"),
      jurisdiction = c("SB City", "UCSB", "SB City", "USFS")
)
```

## Now we're going to JOIN TABLES!!

### [Full Join]{.underline}

```{r}
full_join_example <- full_join(animals, sites)
```

```{r}
left_join_example <- left_join(animals, sites)
```

```{r}
inner_join_example <- inner_join(animals, sites)
```
